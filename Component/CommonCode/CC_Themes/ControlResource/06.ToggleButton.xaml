<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\CommonColor\Brushes.xaml" />
        <ResourceDictionary Source="..\CommonColor\Colors.xaml" />
        <ResourceDictionary Source="..\CommonColor\Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource MouseOverButtonBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource MouseOverButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledButtonForeground}" />
                            <Setter Property="Background" Value="{StaticResource DisabledButtonBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource PressedButtonBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XToogleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Clip="{Binding ElementName=UncheckedEllipse, Path=RenderedGeometry}" ClipToBounds="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.23" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="UncheckedEllipse"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="CheckedEllipse"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="24" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(Control.Height)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="24" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.025"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(Control.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.025" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Control.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="CheckedEllipse"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="UncheckedEllipse"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.1"
                                                                       Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(Control.Width)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.1"
                                                                       Storyboard.TargetName="CheckMark"
                                                                       Storyboard.TargetProperty="(Control.Height)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(Control.Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Control.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="UncheckedEllipse"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}"
                                 Opacity=".54" />
                        <Ellipse x:Name="CheckedEllipse"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}" />
                        <Viewbox x:Name="CheckMark"
                                 Width="24"
                                 Height="24"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Visibility="Hidden">
                            <Canvas Width="24" Height="24">
                                <Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="CheckedEllipse" Property="Stroke" Value="{StaticResource ButtonBackground}" />
                            <Setter TargetName="UncheckedEllipse" Property="Stroke" Value="{StaticResource ButtonBackground}" />
                        </Trigger>
                        <!-- TODO
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="normal" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>
							-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>